
name: Node CI

on:
  push:
    branches-ignore:
      - release/**
      - tmp/**

jobs:

  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: before cache
      run: |
        mkdir -p front/node_modules
        ls front/node_modules
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

    - name: Cache/Restore front/node_modules
      id: cache-dependencies
      uses: actions/cache@v2
      with:
        path: front/node_modules
        key: ${{ runner.OS }}-node_modules_front-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}

    - name: Get yarn cache dir
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      id: cache-yarn
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Cache/Restore yarn cache
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      uses: actions/cache@v2
      with:
        path: ${{ steps.cache-yarn.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-${{ matrix.node-version }}-

    - name: Install dependencies
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      run: |
        yarn

    - name: Print dependencies
      run: |
        echo -n "node " && node -v
        echo -n "npm " && npm -v
        yarn list --depth=0

    - name: yarn lint
      run: |
        yarn lint

    - name: Slack Notification
      uses: weseek/ghaction-slack-notification@master
      if: failure()
      with:
        type: ${{ job.status }}
        job_name: '*lint (${{ matrix.node-version }})*'
        channel: '#mokumoku-ci'
        isCompactMode: true
        url: ${{ secrets.SLACK_WEBHOOK_URL }}

  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front
    needs: [lint]
    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Get Date
      id: date
      run: |
        echo ::set-output name=YmdH::$(date '+%Y%m%d%H')
        echo ::set-output name=Ymd::$(date '+%Y%m%d')
        echo ::set-output name=Ym::$(date '+%Y%m')
        echo ::set-output name=Y::$(date '+%Y')
    - name: Cache/Restore front/node_modules
      id: cache-dependencies
      uses: actions/cache@v2
      with:
        path: front/node_modules
        key: ${{ runner.OS }}-node_modules_front-${{ matrix.node-version }}-${{ steps.date.outputs.YmdH }}
        restore-keys: |
          ${{ runner.os }}-node_modules_font-${{ matrix.node-version }}-${{ steps.date.outputs.Ymd }}
          ${{ runner.os }}-node_modules_font-${{ matrix.node-version }}-${{ steps.date.outputs.Ym }}
          ${{ runner.os }}-node_modules_font-${{ matrix.node-version }}-${{ steps.date.outputs.Y }}
    - name: Get yarn cache dir
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      id: cache-yarn
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Cache/Restore yarn cache
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      uses: actions/cache@v2
      with:
        path: ${{ steps.cache-yarn.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install dependencies
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      run: yarn
    - name: Print dependencies
      run: |
        echo -n "node " && node -v
        echo -n "npm " && npm -v
        yarn list --depth=0
    - name: yarn build --debug
      run: yarn build --debug
    - name: Upload report as artifact
      uses: actions/upload-artifact@v2
      with:
        name: Report
        path: report

    - name: Slack Notification
      uses: weseek/ghaction-slack-notification@master
      if: failure()
      with:
        type: ${{ job.status }}
        job_name: '*build (${{ matrix.node-version }})*'
        channel: '#mokumoku-ci'
        isCompactMode: true
        url: ${{ secrets.SLACK_WEBHOOK_URL }}

  all-jobs-success-alert:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - name: Slack Notification
      uses: weseek/ghaction-slack-notification@master
      if: always()
      with:
        type: "success"
        job_name: '*all jobs*'
        channel: '#mokumoku-ci'
        isCompactMode: true
        url: ${{ secrets.SLACK_WEBHOOK_URL }}